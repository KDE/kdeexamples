// We create the SVG object; this will cause it to load the file in
// contents/images/tiger.svg
svg = new PlasmaSvg('tiger')

// And now a PNG; similarly to the SVG file, this will be pulled from
// contents/images/kde.png
p = new QPixmap('kde.png')

// Now we create a context menu action
plasmoid.setAction('myAction', i18n('Silly name'), 'plasma')

// And change its name
plasmoid.setAction('myAction', i18n('Toggle KDE Logo'), 'plasma')

// And add a second action -> they will appear in the context menu in the order that they are created
plasmoid.setAction('mySecondAction', i18n('Also toggles KDE Logo'), 'plasma')

// and something to control the painting of the logo
drawLogo = true

// print some output about the pixmap
print('size of pixmap is: ' + p.rect.width + 'x' + p.rect.height)

// this function will be called automatically when myAction is triggered
plasmoid.action_myAction = function()
{
    drawLogo = !drawLogo
    plasmoid.update()
    if (drawLogo) {
        print(i18n("Refreshing Plasmoid with the KDE logo."))
    } else {
        print(i18n("Refreshing Plasmoid without the KDE logo."))
    }
}

// and this one with mySecondAction is triggered
plasmoid.action_mySecondAction = function()
{
    plasmoid.action_myAction()
}

// plasmoid.paintInterface is called whenever the plasmoid should be repainted
plasmoid.paintInterface = function(painter, options, rect)
{
    rect = plasmoid.rect
    svg.resize(rect.width, rect.height)
    svg.paint(painter, rect.x, rect.y)

    if (drawLogo) {
        // draw the KDE logo centered
        painter.drawPixmap(rect.x + (rect.width / 2 - p.rect.width / 2),
                           rect.y + (rect.height / 2 - p.rect.height / 2), p)

    }
}

